// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class Barrage;
@class BarrageBuilder;
@class CourseInfo;
@class CourseInfoBuilder;
@class CourseList;
@class CourseListBuilder;
@class CourseType;
@class CourseTypeBuilder;
@class ImportMessage;
@class ImportMessageBuilder;
@class None;
@class NoneBuilder;
@class RegisterResult;
@class RegisterResultBuilder;
@class TestAllTypes;
@class TestAllTypesBuilder;
@class TestAllTypesNestedMessage;
@class TestAllTypesNestedMessageBuilder;
@class TestAllTypesOptionalGroup;
@class TestAllTypesOptionalGroupBuilder;
@class TestAllTypesRepeatedGroup;
@class TestAllTypesRepeatedGroupBuilder;
@class UserInfo;
@class UserInfoBuilder;


typedef NS_ENUM(SInt32, TestAllTypesNestedEnum) {
  TestAllTypesNestedEnumFoo = 1,
  TestAllTypesNestedEnumBar = 2,
  TestAllTypesNestedEnumBaz = 3,
  TestAllTypesNestedEnumNeg = -1,
};

BOOL TestAllTypesNestedEnumIsValidValue(TestAllTypesNestedEnum value);
NSString *NSStringFromTestAllTypesNestedEnum(TestAllTypesNestedEnum value);


@interface MessagesRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define UserInfo_nickName @"nickName"
#define UserInfo_schoolName @"schoolName"
#define UserInfo_phone @"phone"
#define UserInfo_examType @"examType"
#define UserInfo_channelName @"channelName"
@interface UserInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasNickName_:1;
  BOOL hasSchoolName_:1;
  BOOL hasPhone_:1;
  BOOL hasChannelName_:1;
  BOOL hasExamType_:1;
  NSString* nickName;
  NSString* schoolName;
  NSString* phone;
  NSString* channelName;
  UInt32 examType;
}
- (BOOL) hasNickName;
- (BOOL) hasSchoolName;
- (BOOL) hasPhone;
- (BOOL) hasExamType;
- (BOOL) hasChannelName;
@property (readonly, strong) NSString* nickName;
@property (readonly, strong) NSString* schoolName;
@property (readonly, strong) NSString* phone;
@property (readonly) UInt32 examType;
@property (readonly, strong) NSString* channelName;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserInfoBuilder*) builder;
+ (UserInfoBuilder*) builder;
+ (UserInfoBuilder*) builderWithPrototype:(UserInfo*) prototype;
- (UserInfoBuilder*) toBuilder;

+ (UserInfo*) parseFromData:(NSData*) data;
+ (UserInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserInfo*) parseFromInputStream:(NSInputStream*) input;
+ (UserInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserInfoBuilder : PBGeneratedMessageBuilder {
@private
  UserInfo* resultUserInfo;
}

- (UserInfo*) defaultInstance;

- (UserInfoBuilder*) clear;
- (UserInfoBuilder*) clone;

- (UserInfo*) build;
- (UserInfo*) buildPartial;

- (UserInfoBuilder*) mergeFrom:(UserInfo*) other;
- (UserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNickName;
- (NSString*) nickName;
- (UserInfoBuilder*) setNickName:(NSString*) value;
- (UserInfoBuilder*) clearNickName;

- (BOOL) hasSchoolName;
- (NSString*) schoolName;
- (UserInfoBuilder*) setSchoolName:(NSString*) value;
- (UserInfoBuilder*) clearSchoolName;

- (BOOL) hasPhone;
- (NSString*) phone;
- (UserInfoBuilder*) setPhone:(NSString*) value;
- (UserInfoBuilder*) clearPhone;

- (BOOL) hasExamType;
- (UInt32) examType;
- (UserInfoBuilder*) setExamType:(UInt32) value;
- (UserInfoBuilder*) clearExamType;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (UserInfoBuilder*) setChannelName:(NSString*) value;
- (UserInfoBuilder*) clearChannelName;
@end

#define RegisterResult_errorMessage @"errorMessage"
#define RegisterResult_userId @"userId"
#define RegisterResult_sessionId @"sessionId"
@interface RegisterResult : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUserId_:1;
  BOOL hasErrorMessage_:1;
  BOOL hasSessionId_:1;
  SInt32 userId;
  NSString* errorMessage;
  NSString* sessionId;
}
- (BOOL) hasErrorMessage;
- (BOOL) hasUserId;
- (BOOL) hasSessionId;
@property (readonly, strong) NSString* errorMessage;
@property (readonly) SInt32 userId;
@property (readonly, strong) NSString* sessionId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RegisterResultBuilder*) builder;
+ (RegisterResultBuilder*) builder;
+ (RegisterResultBuilder*) builderWithPrototype:(RegisterResult*) prototype;
- (RegisterResultBuilder*) toBuilder;

+ (RegisterResult*) parseFromData:(NSData*) data;
+ (RegisterResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RegisterResult*) parseFromInputStream:(NSInputStream*) input;
+ (RegisterResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RegisterResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RegisterResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RegisterResultBuilder : PBGeneratedMessageBuilder {
@private
  RegisterResult* resultRegisterResult;
}

- (RegisterResult*) defaultInstance;

- (RegisterResultBuilder*) clear;
- (RegisterResultBuilder*) clone;

- (RegisterResult*) build;
- (RegisterResult*) buildPartial;

- (RegisterResultBuilder*) mergeFrom:(RegisterResult*) other;
- (RegisterResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RegisterResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasErrorMessage;
- (NSString*) errorMessage;
- (RegisterResultBuilder*) setErrorMessage:(NSString*) value;
- (RegisterResultBuilder*) clearErrorMessage;

- (BOOL) hasUserId;
- (SInt32) userId;
- (RegisterResultBuilder*) setUserId:(SInt32) value;
- (RegisterResultBuilder*) clearUserId;

- (BOOL) hasSessionId;
- (NSString*) sessionId;
- (RegisterResultBuilder*) setSessionId:(NSString*) value;
- (RegisterResultBuilder*) clearSessionId;
@end

#define Barrage_senderNickname @"senderNickname"
#define Barrage_message @"message"
@interface Barrage : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasSenderNickname_:1;
  BOOL hasMessage_:1;
  NSString* senderNickname;
  NSString* message;
}
- (BOOL) hasSenderNickname;
- (BOOL) hasMessage;
@property (readonly, strong) NSString* senderNickname;
@property (readonly, strong) NSString* message;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BarrageBuilder*) builder;
+ (BarrageBuilder*) builder;
+ (BarrageBuilder*) builderWithPrototype:(Barrage*) prototype;
- (BarrageBuilder*) toBuilder;

+ (Barrage*) parseFromData:(NSData*) data;
+ (Barrage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Barrage*) parseFromInputStream:(NSInputStream*) input;
+ (Barrage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Barrage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Barrage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BarrageBuilder : PBGeneratedMessageBuilder {
@private
  Barrage* resultBarrage;
}

- (Barrage*) defaultInstance;

- (BarrageBuilder*) clear;
- (BarrageBuilder*) clone;

- (Barrage*) build;
- (Barrage*) buildPartial;

- (BarrageBuilder*) mergeFrom:(Barrage*) other;
- (BarrageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BarrageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSenderNickname;
- (NSString*) senderNickname;
- (BarrageBuilder*) setSenderNickname:(NSString*) value;
- (BarrageBuilder*) clearSenderNickname;

- (BOOL) hasMessage;
- (NSString*) message;
- (BarrageBuilder*) setMessage:(NSString*) value;
- (BarrageBuilder*) clearMessage;
@end

@interface None : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (NoneBuilder*) builder;
+ (NoneBuilder*) builder;
+ (NoneBuilder*) builderWithPrototype:(None*) prototype;
- (NoneBuilder*) toBuilder;

+ (None*) parseFromData:(NSData*) data;
+ (None*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (None*) parseFromInputStream:(NSInputStream*) input;
+ (None*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (None*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (None*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NoneBuilder : PBGeneratedMessageBuilder {
@private
  None* resultNone;
}

- (None*) defaultInstance;

- (NoneBuilder*) clear;
- (NoneBuilder*) clone;

- (None*) build;
- (None*) buildPartial;

- (NoneBuilder*) mergeFrom:(None*) other;
- (NoneBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (NoneBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define ImportMessage_courseInfo @"courseInfo"
#define ImportMessage_courseList @"courseList"
@interface ImportMessage : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCourseInfo_:1;
  BOOL hasCourseList_:1;
  CourseInfo* courseInfo;
  CourseList* courseList;
}
- (BOOL) hasCourseInfo;
- (BOOL) hasCourseList;
@property (readonly, strong) CourseInfo* courseInfo;
@property (readonly, strong) CourseList* courseList;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ImportMessageBuilder*) builder;
+ (ImportMessageBuilder*) builder;
+ (ImportMessageBuilder*) builderWithPrototype:(ImportMessage*) prototype;
- (ImportMessageBuilder*) toBuilder;

+ (ImportMessage*) parseFromData:(NSData*) data;
+ (ImportMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ImportMessage*) parseFromInputStream:(NSInputStream*) input;
+ (ImportMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ImportMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ImportMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ImportMessageBuilder : PBGeneratedMessageBuilder {
@private
  ImportMessage* resultImportMessage;
}

- (ImportMessage*) defaultInstance;

- (ImportMessageBuilder*) clear;
- (ImportMessageBuilder*) clone;

- (ImportMessage*) build;
- (ImportMessage*) buildPartial;

- (ImportMessageBuilder*) mergeFrom:(ImportMessage*) other;
- (ImportMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ImportMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCourseInfo;
- (CourseInfo*) courseInfo;
- (ImportMessageBuilder*) setCourseInfo:(CourseInfo*) value;
- (ImportMessageBuilder*) setCourseInfoBuilder:(CourseInfoBuilder*) builderForValue;
- (ImportMessageBuilder*) mergeCourseInfo:(CourseInfo*) value;
- (ImportMessageBuilder*) clearCourseInfo;

- (BOOL) hasCourseList;
- (CourseList*) courseList;
- (ImportMessageBuilder*) setCourseList:(CourseList*) value;
- (ImportMessageBuilder*) setCourseListBuilder:(CourseListBuilder*) builderForValue;
- (ImportMessageBuilder*) mergeCourseList:(CourseList*) value;
- (ImportMessageBuilder*) clearCourseList;
@end

#define CourseType_courseType @"courseType"
#define CourseType_num @"num"
#define CourseType_pageNum @"pageNum"
@interface CourseType : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCourseType_:1;
  BOOL hasNum_:1;
  BOOL hasPageNum_:1;
  UInt32 courseType;
  UInt32 num;
  UInt32 pageNum;
}
- (BOOL) hasCourseType;
- (BOOL) hasNum;
- (BOOL) hasPageNum;
@property (readonly) UInt32 courseType;
@property (readonly) UInt32 num;
@property (readonly) UInt32 pageNum;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CourseTypeBuilder*) builder;
+ (CourseTypeBuilder*) builder;
+ (CourseTypeBuilder*) builderWithPrototype:(CourseType*) prototype;
- (CourseTypeBuilder*) toBuilder;

+ (CourseType*) parseFromData:(NSData*) data;
+ (CourseType*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CourseType*) parseFromInputStream:(NSInputStream*) input;
+ (CourseType*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CourseType*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CourseType*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CourseTypeBuilder : PBGeneratedMessageBuilder {
@private
  CourseType* resultCourseType;
}

- (CourseType*) defaultInstance;

- (CourseTypeBuilder*) clear;
- (CourseTypeBuilder*) clone;

- (CourseType*) build;
- (CourseType*) buildPartial;

- (CourseTypeBuilder*) mergeFrom:(CourseType*) other;
- (CourseTypeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CourseTypeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCourseType;
- (UInt32) courseType;
- (CourseTypeBuilder*) setCourseType:(UInt32) value;
- (CourseTypeBuilder*) clearCourseType;

- (BOOL) hasNum;
- (UInt32) num;
- (CourseTypeBuilder*) setNum:(UInt32) value;
- (CourseTypeBuilder*) clearNum;

- (BOOL) hasPageNum;
- (UInt32) pageNum;
- (CourseTypeBuilder*) setPageNum:(UInt32) value;
- (CourseTypeBuilder*) clearPageNum;
@end

#define CourseInfo_id @"id"
#define CourseInfo_name @"name"
#define CourseInfo_teacherName @"teacherName"
#define CourseInfo_price @"price"
#define CourseInfo_descritpion @"descritpion"
@interface CourseInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasId_:1;
  BOOL hasPrice_:1;
  BOOL hasName_:1;
  BOOL hasTeacherName_:1;
  BOOL hasDescritpion_:1;
  SInt32 id;
  SInt32 price;
  NSString* name;
  NSString* teacherName;
  NSString* descritpion;
}
- (BOOL) hasId;
- (BOOL) hasName;
- (BOOL) hasTeacherName;
- (BOOL) hasPrice;
- (BOOL) hasDescritpion;
@property (readonly) SInt32 id;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* teacherName;
@property (readonly) SInt32 price;
@property (readonly, strong) NSString* descritpion;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CourseInfoBuilder*) builder;
+ (CourseInfoBuilder*) builder;
+ (CourseInfoBuilder*) builderWithPrototype:(CourseInfo*) prototype;
- (CourseInfoBuilder*) toBuilder;

+ (CourseInfo*) parseFromData:(NSData*) data;
+ (CourseInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CourseInfo*) parseFromInputStream:(NSInputStream*) input;
+ (CourseInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CourseInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CourseInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CourseInfoBuilder : PBGeneratedMessageBuilder {
@private
  CourseInfo* resultCourseInfo;
}

- (CourseInfo*) defaultInstance;

- (CourseInfoBuilder*) clear;
- (CourseInfoBuilder*) clone;

- (CourseInfo*) build;
- (CourseInfo*) buildPartial;

- (CourseInfoBuilder*) mergeFrom:(CourseInfo*) other;
- (CourseInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CourseInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt32) id;
- (CourseInfoBuilder*) setId:(SInt32) value;
- (CourseInfoBuilder*) clearId;

- (BOOL) hasName;
- (NSString*) name;
- (CourseInfoBuilder*) setName:(NSString*) value;
- (CourseInfoBuilder*) clearName;

- (BOOL) hasTeacherName;
- (NSString*) teacherName;
- (CourseInfoBuilder*) setTeacherName:(NSString*) value;
- (CourseInfoBuilder*) clearTeacherName;

- (BOOL) hasPrice;
- (SInt32) price;
- (CourseInfoBuilder*) setPrice:(SInt32) value;
- (CourseInfoBuilder*) clearPrice;

- (BOOL) hasDescritpion;
- (NSString*) descritpion;
- (CourseInfoBuilder*) setDescritpion:(NSString*) value;
- (CourseInfoBuilder*) clearDescritpion;
@end

#define CourseList_num @"num"
#define CourseList_list @"list"
@interface CourseList : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasNum_:1;
  SInt32 num;
  NSMutableArray * listArray;
}
- (BOOL) hasNum;
@property (readonly) SInt32 num;
@property (readonly, strong) NSArray * list;
- (CourseInfo*)listAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CourseListBuilder*) builder;
+ (CourseListBuilder*) builder;
+ (CourseListBuilder*) builderWithPrototype:(CourseList*) prototype;
- (CourseListBuilder*) toBuilder;

+ (CourseList*) parseFromData:(NSData*) data;
+ (CourseList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CourseList*) parseFromInputStream:(NSInputStream*) input;
+ (CourseList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CourseList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CourseList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CourseListBuilder : PBGeneratedMessageBuilder {
@private
  CourseList* resultCourseList;
}

- (CourseList*) defaultInstance;

- (CourseListBuilder*) clear;
- (CourseListBuilder*) clone;

- (CourseList*) build;
- (CourseList*) buildPartial;

- (CourseListBuilder*) mergeFrom:(CourseList*) other;
- (CourseListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CourseListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNum;
- (SInt32) num;
- (CourseListBuilder*) setNum:(SInt32) value;
- (CourseListBuilder*) clearNum;

- (NSMutableArray *)list;
- (CourseInfo*)listAtIndex:(NSUInteger)index;
- (CourseListBuilder *)addList:(CourseInfo*)value;
- (CourseListBuilder *)setListArray:(NSArray *)array;
- (CourseListBuilder *)clearList;
@end

#define TestAllTypes_optional_int32 @"optionalInt32"
#define TestAllTypes_optional_int64 @"optionalInt64"
#define TestAllTypes_optional_uint32 @"optionalUint32"
#define TestAllTypes_optional_uint64 @"optionalUint64"
#define TestAllTypes_optional_sint32 @"optionalSint32"
#define TestAllTypes_optional_sint64 @"optionalSint64"
#define TestAllTypes_optional_fixed32 @"optionalFixed32"
#define TestAllTypes_optional_fixed64 @"optionalFixed64"
#define TestAllTypes_optional_sfixed32 @"optionalSfixed32"
#define TestAllTypes_optional_sfixed64 @"optionalSfixed64"
#define TestAllTypes_optional_float @"optionalFloat"
#define TestAllTypes_optional_double @"optionalDouble"
#define TestAllTypes_optional_bool @"optionalBool"
#define TestAllTypes_optional_string @"optionalString"
#define TestAllTypes_optional_bytes @"optionalBytes"
#define TestAllTypes_optionalgroup @"optionalGroup"
#define TestAllTypes_optional_nested_message @"optionalNestedMessage"
#define TestAllTypes_optional_nested_enum @"optionalNestedEnum"
#define TestAllTypes_optional_string_piece @"optionalStringPiece"
#define TestAllTypes_optional_cord @"optionalCord"
#define TestAllTypes_optional_lazy_message @"optionalLazyMessage"
#define TestAllTypes_repeated_int32 @"repeatedInt32"
#define TestAllTypes_repeated_int64 @"repeatedInt64"
#define TestAllTypes_repeated_uint32 @"repeatedUint32"
#define TestAllTypes_repeated_uint64 @"repeatedUint64"
#define TestAllTypes_repeated_sint32 @"repeatedSint32"
#define TestAllTypes_repeated_sint64 @"repeatedSint64"
#define TestAllTypes_repeated_fixed32 @"repeatedFixed32"
#define TestAllTypes_repeated_fixed64 @"repeatedFixed64"
#define TestAllTypes_repeated_sfixed32 @"repeatedSfixed32"
#define TestAllTypes_repeated_sfixed64 @"repeatedSfixed64"
#define TestAllTypes_repeated_float @"repeatedFloat"
#define TestAllTypes_repeated_double @"repeatedDouble"
#define TestAllTypes_repeated_bool @"repeatedBool"
#define TestAllTypes_repeated_string @"repeatedString"
#define TestAllTypes_repeated_bytes @"repeatedBytes"
#define TestAllTypes_repeatedgroup @"repeatedGroup"
#define TestAllTypes_repeated_nested_message @"repeatedNestedMessage"
#define TestAllTypes_repeated_nested_enum @"repeatedNestedEnum"
#define TestAllTypes_repeated_string_piece @"repeatedStringPiece"
#define TestAllTypes_repeated_cord @"repeatedCord"
#define TestAllTypes_repeated_lazy_message @"repeatedLazyMessage"
#define TestAllTypes_default_int32 @"defaultInt32"
#define TestAllTypes_default_int64 @"defaultInt64"
#define TestAllTypes_default_uint32 @"defaultUint32"
#define TestAllTypes_default_uint64 @"defaultUint64"
#define TestAllTypes_default_sint32 @"defaultSint32"
#define TestAllTypes_default_sint64 @"defaultSint64"
#define TestAllTypes_default_fixed32 @"defaultFixed32"
#define TestAllTypes_default_fixed64 @"defaultFixed64"
#define TestAllTypes_default_sfixed32 @"defaultSfixed32"
#define TestAllTypes_default_sfixed64 @"defaultSfixed64"
#define TestAllTypes_default_float @"defaultFloat"
#define TestAllTypes_default_double @"defaultDouble"
#define TestAllTypes_default_bool @"defaultBool"
#define TestAllTypes_default_string @"defaultString"
#define TestAllTypes_default_bytes @"defaultBytes"
#define TestAllTypes_default_nested_enum @"defaultNestedEnum"
#define TestAllTypes_default_string_piece @"defaultStringPiece"
#define TestAllTypes_default_cord @"defaultCord"
#define TestAllTypes_oneof_uint32 @"oneofUint32"
#define TestAllTypes_oneof_nested_message @"oneofNestedMessage"
#define TestAllTypes_oneof_string @"oneofString"
#define TestAllTypes_oneof_bytes @"oneofBytes"
@interface TestAllTypes : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOptionalBool_:1;
  BOOL hasDefaultBool_:1;
  BOOL hasOptionalDouble_:1;
  BOOL hasDefaultDouble_:1;
  BOOL hasOptionalFloat_:1;
  BOOL hasDefaultFloat_:1;
  BOOL hasOptionalInt64_:1;
  BOOL hasDefaultInt64_:1;
  BOOL hasOptionalUint64_:1;
  BOOL hasDefaultUint64_:1;
  BOOL hasOptionalInt32_:1;
  BOOL hasDefaultInt32_:1;
  BOOL hasOptionalFixed64_:1;
  BOOL hasDefaultFixed64_:1;
  BOOL hasOptionalFixed32_:1;
  BOOL hasDefaultFixed32_:1;
  BOOL hasOneofString_:1;
  BOOL hasDefaultCord_:1;
  BOOL hasDefaultStringPiece_:1;
  BOOL hasDefaultString_:1;
  BOOL hasOptionalString_:1;
  BOOL hasOptionalStringPiece_:1;
  BOOL hasOptionalCord_:1;
  BOOL hasOptionalGroup_:1;
  BOOL hasOneofNestedMessage_:1;
  BOOL hasOptionalNestedMessage_:1;
  BOOL hasOptionalLazyMessage_:1;
  BOOL hasOneofBytes_:1;
  BOOL hasDefaultBytes_:1;
  BOOL hasOptionalBytes_:1;
  BOOL hasOptionalUint32_:1;
  BOOL hasOneofUint32_:1;
  BOOL hasDefaultUint32_:1;
  BOOL hasDefaultNestedEnum_:1;
  BOOL hasOptionalNestedEnum_:1;
  BOOL hasOptionalSfixed32_:1;
  BOOL hasDefaultSfixed32_:1;
  BOOL hasOptionalSfixed64_:1;
  BOOL hasDefaultSfixed64_:1;
  BOOL hasDefaultSint32_:1;
  BOOL hasOptionalSint32_:1;
  BOOL hasOptionalSint64_:1;
  BOOL hasDefaultSint64_:1;
  BOOL optionalBool_:1;
  BOOL defaultBool_:1;
  Float64 optionalDouble;
  Float64 defaultDouble;
  Float32 optionalFloat;
  Float32 defaultFloat;
  SInt64 optionalInt64;
  SInt64 defaultInt64;
  UInt64 optionalUint64;
  UInt64 defaultUint64;
  SInt32 optionalInt32;
  SInt32 defaultInt32;
  UInt64 optionalFixed64;
  UInt64 defaultFixed64;
  UInt32 optionalFixed32;
  UInt32 defaultFixed32;
  NSString* oneofString;
  NSString* defaultCord;
  NSString* defaultStringPiece;
  NSString* defaultString;
  NSString* optionalString;
  NSString* optionalStringPiece;
  NSString* optionalCord;
  TestAllTypesOptionalGroup* optionalGroup;
  TestAllTypesNestedMessage* oneofNestedMessage;
  TestAllTypesNestedMessage* optionalNestedMessage;
  TestAllTypesNestedMessage* optionalLazyMessage;
  NSData* oneofBytes;
  NSData* defaultBytes;
  NSData* optionalBytes;
  UInt32 optionalUint32;
  UInt32 oneofUint32;
  UInt32 defaultUint32;
  TestAllTypesNestedEnum defaultNestedEnum;
  TestAllTypesNestedEnum optionalNestedEnum;
  SInt32 optionalSfixed32;
  SInt32 defaultSfixed32;
  SInt64 optionalSfixed64;
  SInt64 defaultSfixed64;
  SInt32 defaultSint32;
  SInt32 optionalSint32;
  SInt64 optionalSint64;
  SInt64 defaultSint64;
  PBAppendableArray * repeatedBoolArray;
  PBAppendableArray * repeatedDoubleArray;
  PBAppendableArray * repeatedFloatArray;
  PBAppendableArray * repeatedInt64Array;
  PBAppendableArray * repeatedUint64Array;
  PBAppendableArray * repeatedInt32Array;
  PBAppendableArray * repeatedFixed64Array;
  PBAppendableArray * repeatedFixed32Array;
  NSMutableArray * repeatedCordArray;
  NSMutableArray * repeatedStringPieceArray;
  NSMutableArray * repeatedStringArray;
  NSMutableArray * repeatedGroupArray;
  NSMutableArray * repeatedLazyMessageArray;
  NSMutableArray * repeatedNestedMessageArray;
  NSMutableArray * repeatedBytesArray;
  PBAppendableArray * repeatedUint32Array;
  PBAppendableArray * repeatedNestedEnumArray;
  PBAppendableArray * repeatedSfixed32Array;
  PBAppendableArray * repeatedSfixed64Array;
  PBAppendableArray * repeatedSint32Array;
  PBAppendableArray * repeatedSint64Array;
}
- (BOOL) hasOptionalInt32;
- (BOOL) hasOptionalInt64;
- (BOOL) hasOptionalUint32;
- (BOOL) hasOptionalUint64;
- (BOOL) hasOptionalSint32;
- (BOOL) hasOptionalSint64;
- (BOOL) hasOptionalFixed32;
- (BOOL) hasOptionalFixed64;
- (BOOL) hasOptionalSfixed32;
- (BOOL) hasOptionalSfixed64;
- (BOOL) hasOptionalFloat;
- (BOOL) hasOptionalDouble;
- (BOOL) hasOptionalBool;
- (BOOL) hasOptionalString;
- (BOOL) hasOptionalBytes;
- (BOOL) hasOptionalGroup;
- (BOOL) hasOptionalNestedMessage;
- (BOOL) hasOptionalNestedEnum;
- (BOOL) hasOptionalStringPiece;
- (BOOL) hasOptionalCord;
- (BOOL) hasOptionalLazyMessage;
- (BOOL) hasDefaultInt32;
- (BOOL) hasDefaultInt64;
- (BOOL) hasDefaultUint32;
- (BOOL) hasDefaultUint64;
- (BOOL) hasDefaultSint32;
- (BOOL) hasDefaultSint64;
- (BOOL) hasDefaultFixed32;
- (BOOL) hasDefaultFixed64;
- (BOOL) hasDefaultSfixed32;
- (BOOL) hasDefaultSfixed64;
- (BOOL) hasDefaultFloat;
- (BOOL) hasDefaultDouble;
- (BOOL) hasDefaultBool;
- (BOOL) hasDefaultString;
- (BOOL) hasDefaultBytes;
- (BOOL) hasDefaultNestedEnum;
- (BOOL) hasDefaultStringPiece;
- (BOOL) hasDefaultCord;
- (BOOL) hasOneofUint32;
- (BOOL) hasOneofNestedMessage;
- (BOOL) hasOneofString;
- (BOOL) hasOneofBytes;
@property (readonly) SInt32 optionalInt32;
@property (readonly) SInt64 optionalInt64;
@property (readonly) UInt32 optionalUint32;
@property (readonly) UInt64 optionalUint64;
@property (readonly) SInt32 optionalSint32;
@property (readonly) SInt64 optionalSint64;
@property (readonly) UInt32 optionalFixed32;
@property (readonly) UInt64 optionalFixed64;
@property (readonly) SInt32 optionalSfixed32;
@property (readonly) SInt64 optionalSfixed64;
@property (readonly) Float32 optionalFloat;
@property (readonly) Float64 optionalDouble;
- (BOOL) optionalBool;
@property (readonly, strong) NSString* optionalString;
@property (readonly, strong) NSData* optionalBytes;
@property (readonly, strong) TestAllTypesOptionalGroup* optionalGroup;
@property (readonly, strong) TestAllTypesNestedMessage* optionalNestedMessage;
@property (readonly) TestAllTypesNestedEnum optionalNestedEnum;
@property (readonly, strong) NSString* optionalStringPiece;
@property (readonly, strong) NSString* optionalCord;
@property (readonly, strong) TestAllTypesNestedMessage* optionalLazyMessage;
@property (readonly, strong) PBArray * repeatedInt32;
@property (readonly, strong) PBArray * repeatedInt64;
@property (readonly, strong) PBArray * repeatedUint32;
@property (readonly, strong) PBArray * repeatedUint64;
@property (readonly, strong) PBArray * repeatedSint32;
@property (readonly, strong) PBArray * repeatedSint64;
@property (readonly, strong) PBArray * repeatedFixed32;
@property (readonly, strong) PBArray * repeatedFixed64;
@property (readonly, strong) PBArray * repeatedSfixed32;
@property (readonly, strong) PBArray * repeatedSfixed64;
@property (readonly, strong) PBArray * repeatedFloat;
@property (readonly, strong) PBArray * repeatedDouble;
@property (readonly, strong) PBArray * repeatedBool;
@property (readonly, strong) NSArray * repeatedString;
@property (readonly, strong) NSArray * repeatedBytes;
@property (readonly, strong) NSArray * repeatedGroup;
@property (readonly, strong) NSArray * repeatedNestedMessage;
@property (readonly, strong) PBArray * repeatedNestedEnum;
@property (readonly, strong) NSArray * repeatedStringPiece;
@property (readonly, strong) NSArray * repeatedCord;
@property (readonly, strong) NSArray * repeatedLazyMessage;
@property (readonly) SInt32 defaultInt32;
@property (readonly) SInt64 defaultInt64;
@property (readonly) UInt32 defaultUint32;
@property (readonly) UInt64 defaultUint64;
@property (readonly) SInt32 defaultSint32;
@property (readonly) SInt64 defaultSint64;
@property (readonly) UInt32 defaultFixed32;
@property (readonly) UInt64 defaultFixed64;
@property (readonly) SInt32 defaultSfixed32;
@property (readonly) SInt64 defaultSfixed64;
@property (readonly) Float32 defaultFloat;
@property (readonly) Float64 defaultDouble;
- (BOOL) defaultBool;
@property (readonly, strong) NSString* defaultString;
@property (readonly, strong) NSData* defaultBytes;
@property (readonly) TestAllTypesNestedEnum defaultNestedEnum;
@property (readonly, strong) NSString* defaultStringPiece;
@property (readonly, strong) NSString* defaultCord;
@property (readonly) UInt32 oneofUint32;
@property (readonly, strong) TestAllTypesNestedMessage* oneofNestedMessage;
@property (readonly, strong) NSString* oneofString;
@property (readonly, strong) NSData* oneofBytes;
- (SInt32)repeatedInt32AtIndex:(NSUInteger)index;
- (SInt64)repeatedInt64AtIndex:(NSUInteger)index;
- (UInt32)repeatedUint32AtIndex:(NSUInteger)index;
- (UInt64)repeatedUint64AtIndex:(NSUInteger)index;
- (SInt32)repeatedSint32AtIndex:(NSUInteger)index;
- (SInt64)repeatedSint64AtIndex:(NSUInteger)index;
- (UInt32)repeatedFixed32AtIndex:(NSUInteger)index;
- (UInt64)repeatedFixed64AtIndex:(NSUInteger)index;
- (SInt32)repeatedSfixed32AtIndex:(NSUInteger)index;
- (SInt64)repeatedSfixed64AtIndex:(NSUInteger)index;
- (Float32)repeatedFloatAtIndex:(NSUInteger)index;
- (Float64)repeatedDoubleAtIndex:(NSUInteger)index;
- (BOOL)repeatedBoolAtIndex:(NSUInteger)index;
- (NSString*)repeatedStringAtIndex:(NSUInteger)index;
- (NSData*)repeatedBytesAtIndex:(NSUInteger)index;
- (TestAllTypesRepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;
- (TestAllTypesNestedMessage*)repeatedNestedMessageAtIndex:(NSUInteger)index;
- (TestAllTypesNestedEnum)repeatedNestedEnumAtIndex:(NSUInteger)index;
- (NSString*)repeatedStringPieceAtIndex:(NSUInteger)index;
- (NSString*)repeatedCordAtIndex:(NSUInteger)index;
- (TestAllTypesNestedMessage*)repeatedLazyMessageAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesBuilder*) builder;
+ (TestAllTypesBuilder*) builder;
+ (TestAllTypesBuilder*) builderWithPrototype:(TestAllTypes*) prototype;
- (TestAllTypesBuilder*) toBuilder;

+ (TestAllTypes*) parseFromData:(NSData*) data;
+ (TestAllTypes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypes*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define NestedMessage_bb @"bb"
@interface TestAllTypesNestedMessage : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasBb_:1;
  SInt32 bb;
}
- (BOOL) hasBb;
@property (readonly) SInt32 bb;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesNestedMessageBuilder*) builder;
+ (TestAllTypesNestedMessageBuilder*) builder;
+ (TestAllTypesNestedMessageBuilder*) builderWithPrototype:(TestAllTypesNestedMessage*) prototype;
- (TestAllTypesNestedMessageBuilder*) toBuilder;

+ (TestAllTypesNestedMessage*) parseFromData:(NSData*) data;
+ (TestAllTypesNestedMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesNestedMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesNestedMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesNestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesNestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesNestedMessageBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypesNestedMessage* resultNestedMessage;
}

- (TestAllTypesNestedMessage*) defaultInstance;

- (TestAllTypesNestedMessageBuilder*) clear;
- (TestAllTypesNestedMessageBuilder*) clone;

- (TestAllTypesNestedMessage*) build;
- (TestAllTypesNestedMessage*) buildPartial;

- (TestAllTypesNestedMessageBuilder*) mergeFrom:(TestAllTypesNestedMessage*) other;
- (TestAllTypesNestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesNestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBb;
- (SInt32) bb;
- (TestAllTypesNestedMessageBuilder*) setBb:(SInt32) value;
- (TestAllTypesNestedMessageBuilder*) clearBb;
@end

#define OptionalGroup_a @"a"
@interface TestAllTypesOptionalGroup : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesOptionalGroupBuilder*) builder;
+ (TestAllTypesOptionalGroupBuilder*) builder;
+ (TestAllTypesOptionalGroupBuilder*) builderWithPrototype:(TestAllTypesOptionalGroup*) prototype;
- (TestAllTypesOptionalGroupBuilder*) toBuilder;

+ (TestAllTypesOptionalGroup*) parseFromData:(NSData*) data;
+ (TestAllTypesOptionalGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesOptionalGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesOptionalGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesOptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesOptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesOptionalGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypesOptionalGroup* resultOptionalGroup;
}

- (TestAllTypesOptionalGroup*) defaultInstance;

- (TestAllTypesOptionalGroupBuilder*) clear;
- (TestAllTypesOptionalGroupBuilder*) clone;

- (TestAllTypesOptionalGroup*) build;
- (TestAllTypesOptionalGroup*) buildPartial;

- (TestAllTypesOptionalGroupBuilder*) mergeFrom:(TestAllTypesOptionalGroup*) other;
- (TestAllTypesOptionalGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesOptionalGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestAllTypesOptionalGroupBuilder*) setA:(SInt32) value;
- (TestAllTypesOptionalGroupBuilder*) clearA;
@end

#define RepeatedGroup_a @"a"
@interface TestAllTypesRepeatedGroup : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesRepeatedGroupBuilder*) builder;
+ (TestAllTypesRepeatedGroupBuilder*) builder;
+ (TestAllTypesRepeatedGroupBuilder*) builderWithPrototype:(TestAllTypesRepeatedGroup*) prototype;
- (TestAllTypesRepeatedGroupBuilder*) toBuilder;

+ (TestAllTypesRepeatedGroup*) parseFromData:(NSData*) data;
+ (TestAllTypesRepeatedGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesRepeatedGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesRepeatedGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesRepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesRepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesRepeatedGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypesRepeatedGroup* resultRepeatedGroup;
}

- (TestAllTypesRepeatedGroup*) defaultInstance;

- (TestAllTypesRepeatedGroupBuilder*) clear;
- (TestAllTypesRepeatedGroupBuilder*) clone;

- (TestAllTypesRepeatedGroup*) build;
- (TestAllTypesRepeatedGroup*) buildPartial;

- (TestAllTypesRepeatedGroupBuilder*) mergeFrom:(TestAllTypesRepeatedGroup*) other;
- (TestAllTypesRepeatedGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesRepeatedGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestAllTypesRepeatedGroupBuilder*) setA:(SInt32) value;
- (TestAllTypesRepeatedGroupBuilder*) clearA;
@end

@interface TestAllTypesBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypes* resultTestAllTypes;
}

- (TestAllTypes*) defaultInstance;

- (TestAllTypesBuilder*) clear;
- (TestAllTypesBuilder*) clone;

- (TestAllTypes*) build;
- (TestAllTypes*) buildPartial;

- (TestAllTypesBuilder*) mergeFrom:(TestAllTypes*) other;
- (TestAllTypesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOptionalInt32;
- (SInt32) optionalInt32;
- (TestAllTypesBuilder*) setOptionalInt32:(SInt32) value;
- (TestAllTypesBuilder*) clearOptionalInt32;

- (BOOL) hasOptionalInt64;
- (SInt64) optionalInt64;
- (TestAllTypesBuilder*) setOptionalInt64:(SInt64) value;
- (TestAllTypesBuilder*) clearOptionalInt64;

- (BOOL) hasOptionalUint32;
- (UInt32) optionalUint32;
- (TestAllTypesBuilder*) setOptionalUint32:(UInt32) value;
- (TestAllTypesBuilder*) clearOptionalUint32;

- (BOOL) hasOptionalUint64;
- (UInt64) optionalUint64;
- (TestAllTypesBuilder*) setOptionalUint64:(UInt64) value;
- (TestAllTypesBuilder*) clearOptionalUint64;

- (BOOL) hasOptionalSint32;
- (SInt32) optionalSint32;
- (TestAllTypesBuilder*) setOptionalSint32:(SInt32) value;
- (TestAllTypesBuilder*) clearOptionalSint32;

- (BOOL) hasOptionalSint64;
- (SInt64) optionalSint64;
- (TestAllTypesBuilder*) setOptionalSint64:(SInt64) value;
- (TestAllTypesBuilder*) clearOptionalSint64;

- (BOOL) hasOptionalFixed32;
- (UInt32) optionalFixed32;
- (TestAllTypesBuilder*) setOptionalFixed32:(UInt32) value;
- (TestAllTypesBuilder*) clearOptionalFixed32;

- (BOOL) hasOptionalFixed64;
- (UInt64) optionalFixed64;
- (TestAllTypesBuilder*) setOptionalFixed64:(UInt64) value;
- (TestAllTypesBuilder*) clearOptionalFixed64;

- (BOOL) hasOptionalSfixed32;
- (SInt32) optionalSfixed32;
- (TestAllTypesBuilder*) setOptionalSfixed32:(SInt32) value;
- (TestAllTypesBuilder*) clearOptionalSfixed32;

- (BOOL) hasOptionalSfixed64;
- (SInt64) optionalSfixed64;
- (TestAllTypesBuilder*) setOptionalSfixed64:(SInt64) value;
- (TestAllTypesBuilder*) clearOptionalSfixed64;

- (BOOL) hasOptionalFloat;
- (Float32) optionalFloat;
- (TestAllTypesBuilder*) setOptionalFloat:(Float32) value;
- (TestAllTypesBuilder*) clearOptionalFloat;

- (BOOL) hasOptionalDouble;
- (Float64) optionalDouble;
- (TestAllTypesBuilder*) setOptionalDouble:(Float64) value;
- (TestAllTypesBuilder*) clearOptionalDouble;

- (BOOL) hasOptionalBool;
- (BOOL) optionalBool;
- (TestAllTypesBuilder*) setOptionalBool:(BOOL) value;
- (TestAllTypesBuilder*) clearOptionalBool;

- (BOOL) hasOptionalString;
- (NSString*) optionalString;
- (TestAllTypesBuilder*) setOptionalString:(NSString*) value;
- (TestAllTypesBuilder*) clearOptionalString;

- (BOOL) hasOptionalBytes;
- (NSData*) optionalBytes;
- (TestAllTypesBuilder*) setOptionalBytes:(NSData*) value;
- (TestAllTypesBuilder*) clearOptionalBytes;

- (BOOL) hasOptionalGroup;
- (TestAllTypesOptionalGroup*) optionalGroup;
- (TestAllTypesBuilder*) setOptionalGroup:(TestAllTypesOptionalGroup*) value;
- (TestAllTypesBuilder*) setOptionalGroupBuilder:(TestAllTypesOptionalGroupBuilder*) builderForValue;
- (TestAllTypesBuilder*) mergeOptionalGroup:(TestAllTypesOptionalGroup*) value;
- (TestAllTypesBuilder*) clearOptionalGroup;

- (BOOL) hasOptionalNestedMessage;
- (TestAllTypesNestedMessage*) optionalNestedMessage;
- (TestAllTypesBuilder*) setOptionalNestedMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) setOptionalNestedMessageBuilder:(TestAllTypesNestedMessageBuilder*) builderForValue;
- (TestAllTypesBuilder*) mergeOptionalNestedMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) clearOptionalNestedMessage;

- (BOOL) hasOptionalNestedEnum;
- (TestAllTypesNestedEnum) optionalNestedEnum;
- (TestAllTypesBuilder*) setOptionalNestedEnum:(TestAllTypesNestedEnum) value;
- (TestAllTypesBuilder*) clearOptionalNestedEnum;

- (BOOL) hasOptionalStringPiece;
- (NSString*) optionalStringPiece;
- (TestAllTypesBuilder*) setOptionalStringPiece:(NSString*) value;
- (TestAllTypesBuilder*) clearOptionalStringPiece;

- (BOOL) hasOptionalCord;
- (NSString*) optionalCord;
- (TestAllTypesBuilder*) setOptionalCord:(NSString*) value;
- (TestAllTypesBuilder*) clearOptionalCord;

- (BOOL) hasOptionalLazyMessage;
- (TestAllTypesNestedMessage*) optionalLazyMessage;
- (TestAllTypesBuilder*) setOptionalLazyMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) setOptionalLazyMessageBuilder:(TestAllTypesNestedMessageBuilder*) builderForValue;
- (TestAllTypesBuilder*) mergeOptionalLazyMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) clearOptionalLazyMessage;

- (PBAppendableArray *)repeatedInt32;
- (SInt32)repeatedInt32AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedInt32:(SInt32)value;
- (TestAllTypesBuilder *)setRepeatedInt32Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedInt32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedInt32;

- (PBAppendableArray *)repeatedInt64;
- (SInt64)repeatedInt64AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedInt64:(SInt64)value;
- (TestAllTypesBuilder *)setRepeatedInt64Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedInt64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedInt64;

- (PBAppendableArray *)repeatedUint32;
- (UInt32)repeatedUint32AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedUint32:(UInt32)value;
- (TestAllTypesBuilder *)setRepeatedUint32Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedUint32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedUint32;

- (PBAppendableArray *)repeatedUint64;
- (UInt64)repeatedUint64AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedUint64:(UInt64)value;
- (TestAllTypesBuilder *)setRepeatedUint64Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedUint64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedUint64;

- (PBAppendableArray *)repeatedSint32;
- (SInt32)repeatedSint32AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedSint32:(SInt32)value;
- (TestAllTypesBuilder *)setRepeatedSint32Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedSint32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedSint32;

- (PBAppendableArray *)repeatedSint64;
- (SInt64)repeatedSint64AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedSint64:(SInt64)value;
- (TestAllTypesBuilder *)setRepeatedSint64Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedSint64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedSint64;

- (PBAppendableArray *)repeatedFixed32;
- (UInt32)repeatedFixed32AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedFixed32:(UInt32)value;
- (TestAllTypesBuilder *)setRepeatedFixed32Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedFixed32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedFixed32;

- (PBAppendableArray *)repeatedFixed64;
- (UInt64)repeatedFixed64AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedFixed64:(UInt64)value;
- (TestAllTypesBuilder *)setRepeatedFixed64Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedFixed64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedFixed64;

- (PBAppendableArray *)repeatedSfixed32;
- (SInt32)repeatedSfixed32AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedSfixed32:(SInt32)value;
- (TestAllTypesBuilder *)setRepeatedSfixed32Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedSfixed32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedSfixed32;

- (PBAppendableArray *)repeatedSfixed64;
- (SInt64)repeatedSfixed64AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedSfixed64:(SInt64)value;
- (TestAllTypesBuilder *)setRepeatedSfixed64Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedSfixed64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedSfixed64;

- (PBAppendableArray *)repeatedFloat;
- (Float32)repeatedFloatAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedFloat:(Float32)value;
- (TestAllTypesBuilder *)setRepeatedFloatArray:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedFloatValues:(const Float32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedFloat;

- (PBAppendableArray *)repeatedDouble;
- (Float64)repeatedDoubleAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedDouble:(Float64)value;
- (TestAllTypesBuilder *)setRepeatedDoubleArray:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedDoubleValues:(const Float64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedDouble;

- (PBAppendableArray *)repeatedBool;
- (BOOL)repeatedBoolAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedBool:(BOOL)value;
- (TestAllTypesBuilder *)setRepeatedBoolArray:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedBoolValues:(const BOOL *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedBool;

- (NSMutableArray *)repeatedString;
- (NSString*)repeatedStringAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedString:(NSString*)value;
- (TestAllTypesBuilder *)setRepeatedStringArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedString;

- (NSMutableArray *)repeatedBytes;
- (NSData*)repeatedBytesAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedBytes:(NSData*)value;
- (TestAllTypesBuilder *)setRepeatedBytesArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedBytes;

- (NSMutableArray *)repeatedGroup;
- (TestAllTypesRepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedGroup:(TestAllTypesRepeatedGroup*)value;
- (TestAllTypesBuilder *)setRepeatedGroupArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedGroup;

- (NSMutableArray *)repeatedNestedMessage;
- (TestAllTypesNestedMessage*)repeatedNestedMessageAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedNestedMessage:(TestAllTypesNestedMessage*)value;
- (TestAllTypesBuilder *)setRepeatedNestedMessageArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedNestedMessage;

- (PBAppendableArray *)repeatedNestedEnum;
- (TestAllTypesNestedEnum)repeatedNestedEnumAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedNestedEnum:(TestAllTypesNestedEnum)value;
- (TestAllTypesBuilder *)setRepeatedNestedEnumArray:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedNestedEnumValues:(const TestAllTypesNestedEnum *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedNestedEnum;

- (NSMutableArray *)repeatedStringPiece;
- (NSString*)repeatedStringPieceAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedStringPiece:(NSString*)value;
- (TestAllTypesBuilder *)setRepeatedStringPieceArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedStringPiece;

- (NSMutableArray *)repeatedCord;
- (NSString*)repeatedCordAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedCord:(NSString*)value;
- (TestAllTypesBuilder *)setRepeatedCordArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedCord;

- (NSMutableArray *)repeatedLazyMessage;
- (TestAllTypesNestedMessage*)repeatedLazyMessageAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedLazyMessage:(TestAllTypesNestedMessage*)value;
- (TestAllTypesBuilder *)setRepeatedLazyMessageArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedLazyMessage;

- (BOOL) hasDefaultInt32;
- (SInt32) defaultInt32;
- (TestAllTypesBuilder*) setDefaultInt32:(SInt32) value;
- (TestAllTypesBuilder*) clearDefaultInt32;

- (BOOL) hasDefaultInt64;
- (SInt64) defaultInt64;
- (TestAllTypesBuilder*) setDefaultInt64:(SInt64) value;
- (TestAllTypesBuilder*) clearDefaultInt64;

- (BOOL) hasDefaultUint32;
- (UInt32) defaultUint32;
- (TestAllTypesBuilder*) setDefaultUint32:(UInt32) value;
- (TestAllTypesBuilder*) clearDefaultUint32;

- (BOOL) hasDefaultUint64;
- (UInt64) defaultUint64;
- (TestAllTypesBuilder*) setDefaultUint64:(UInt64) value;
- (TestAllTypesBuilder*) clearDefaultUint64;

- (BOOL) hasDefaultSint32;
- (SInt32) defaultSint32;
- (TestAllTypesBuilder*) setDefaultSint32:(SInt32) value;
- (TestAllTypesBuilder*) clearDefaultSint32;

- (BOOL) hasDefaultSint64;
- (SInt64) defaultSint64;
- (TestAllTypesBuilder*) setDefaultSint64:(SInt64) value;
- (TestAllTypesBuilder*) clearDefaultSint64;

- (BOOL) hasDefaultFixed32;
- (UInt32) defaultFixed32;
- (TestAllTypesBuilder*) setDefaultFixed32:(UInt32) value;
- (TestAllTypesBuilder*) clearDefaultFixed32;

- (BOOL) hasDefaultFixed64;
- (UInt64) defaultFixed64;
- (TestAllTypesBuilder*) setDefaultFixed64:(UInt64) value;
- (TestAllTypesBuilder*) clearDefaultFixed64;

- (BOOL) hasDefaultSfixed32;
- (SInt32) defaultSfixed32;
- (TestAllTypesBuilder*) setDefaultSfixed32:(SInt32) value;
- (TestAllTypesBuilder*) clearDefaultSfixed32;

- (BOOL) hasDefaultSfixed64;
- (SInt64) defaultSfixed64;
- (TestAllTypesBuilder*) setDefaultSfixed64:(SInt64) value;
- (TestAllTypesBuilder*) clearDefaultSfixed64;

- (BOOL) hasDefaultFloat;
- (Float32) defaultFloat;
- (TestAllTypesBuilder*) setDefaultFloat:(Float32) value;
- (TestAllTypesBuilder*) clearDefaultFloat;

- (BOOL) hasDefaultDouble;
- (Float64) defaultDouble;
- (TestAllTypesBuilder*) setDefaultDouble:(Float64) value;
- (TestAllTypesBuilder*) clearDefaultDouble;

- (BOOL) hasDefaultBool;
- (BOOL) defaultBool;
- (TestAllTypesBuilder*) setDefaultBool:(BOOL) value;
- (TestAllTypesBuilder*) clearDefaultBool;

- (BOOL) hasDefaultString;
- (NSString*) defaultString;
- (TestAllTypesBuilder*) setDefaultString:(NSString*) value;
- (TestAllTypesBuilder*) clearDefaultString;

- (BOOL) hasDefaultBytes;
- (NSData*) defaultBytes;
- (TestAllTypesBuilder*) setDefaultBytes:(NSData*) value;
- (TestAllTypesBuilder*) clearDefaultBytes;

- (BOOL) hasDefaultNestedEnum;
- (TestAllTypesNestedEnum) defaultNestedEnum;
- (TestAllTypesBuilder*) setDefaultNestedEnum:(TestAllTypesNestedEnum) value;
- (TestAllTypesBuilder*) clearDefaultNestedEnum;

- (BOOL) hasDefaultStringPiece;
- (NSString*) defaultStringPiece;
- (TestAllTypesBuilder*) setDefaultStringPiece:(NSString*) value;
- (TestAllTypesBuilder*) clearDefaultStringPiece;

- (BOOL) hasDefaultCord;
- (NSString*) defaultCord;
- (TestAllTypesBuilder*) setDefaultCord:(NSString*) value;
- (TestAllTypesBuilder*) clearDefaultCord;

- (BOOL) hasOneofUint32;
- (UInt32) oneofUint32;
- (TestAllTypesBuilder*) setOneofUint32:(UInt32) value;
- (TestAllTypesBuilder*) clearOneofUint32;

- (BOOL) hasOneofNestedMessage;
- (TestAllTypesNestedMessage*) oneofNestedMessage;
- (TestAllTypesBuilder*) setOneofNestedMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) setOneofNestedMessageBuilder:(TestAllTypesNestedMessageBuilder*) builderForValue;
- (TestAllTypesBuilder*) mergeOneofNestedMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) clearOneofNestedMessage;

- (BOOL) hasOneofString;
- (NSString*) oneofString;
- (TestAllTypesBuilder*) setOneofString:(NSString*) value;
- (TestAllTypesBuilder*) clearOneofString;

- (BOOL) hasOneofBytes;
- (NSData*) oneofBytes;
- (TestAllTypesBuilder*) setOneofBytes:(NSData*) value;
- (TestAllTypesBuilder*) clearOneofBytes;
@end


// @@protoc_insertion_point(global_scope)
